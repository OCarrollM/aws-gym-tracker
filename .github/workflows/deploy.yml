name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to ECR
        run: |
          IMAGE_TAG=latest
          ECR_IMAGE=${{ secrets.ECR_REPO }}:$IMAGE_TAG
          docker build -t $ECR_IMAGE .
          docker push $ECR_IMAGE

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Deploy on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ec2-user@${{ secrets.EC2_HOST }} << 'EOF'
            IMAGE=${{ secrets.ECR_REPO }}:latest
            # Stop/remove old container if exists
            docker stop gymtracker || true
            docker rm gymtracker || true
            # Pull latest image from ECR
            docker pull $IMAGE
            # Run new container
            docker run -d -p 8080:8080 --name gymtracker $IMAGE
          EOF    
